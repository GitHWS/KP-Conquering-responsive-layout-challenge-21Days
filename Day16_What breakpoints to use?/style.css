*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: 'Roboto', sans-serif;
  font-size: 1.3rem;
}

img {
  max-width: 100%;
}

h1 {
  font-size: 3rem;
  margin-top: 0;
}

.section-title {
  color: #87629a;
}

.btn {
  display: inline-block;
  text-decoration: none;
  text-transform: uppercase;
  color: #23424a;
  font-weight: 900;
  background-color: #38cfd9;
  padding: 0.75em 2em;
  border-radius: 100px;
}

.btn:hover,
.btn:focus {
  opacity: 0.75;
}

.container {
  width: 80%;
  max-width: 1100px;
  margin: 0 auto;
}

.row {
  display: flex;
  justify-content: space-between;
}

.col {
  /* these are now flex items */
  width: 100%;
}

.col + .col {
  margin-left: 30px;
}

header {
  background: #136c72;
  padding: 1em 0;
}

.logo {
  /* border: 2px solid yellow; */
  margin-right: 1em;
}

.nav {
  display: flex;
  justify-content: space-between;
  /* width:100%를 사용하면 남은 공간을 모두 이용하게 된다. */
  /* width: 100%; */

  /* 또는 남은 공간을 모두 차지하는 flex-grow를 사용한다. */
  /* flex-grow: 1; */
  /* width가 설정되어있고 flex-shrink가 0일 경우 줄어들지 않고 설정된 width만큼 유지된다. 레이아웃이 화면 밖으로 넘어가는 문제가 발생하기 때문에 반드시 1로 설정하는 것이 좋다. */
  /* width: 700px; */
  /* flex-shrink: 1; */
  /* border: 2px solid red; */
}

.nav__list {
  margin: 0;
  padding: 0;
  list-style: none;

  display: flex;
  align-items: center;
  font-size: 0.9rem;
}

/* flex 내부 요소를 가운데 정렬을 한다. */
.nav__list--primary {
  margin: 0 auto;
}

/* 같은 클래스명을 가진 형제 요소만 모두 선택한다. */
.nav__item + .nav__item {
  margin-left: 1em;
}

/* margin-left:auto는 왼쪽으로 margin을 넣어서 오른쪽 끝으로 밀어버린다. */
/* .nav__item--push-right {
  margin-left: auto;
} */

.nav__link {
  color: #fff;
  text-decoration: none;
  text-transform: uppercase;
}

.nav__link--button {
  background: #fff;
  color: #136c72;
  padding: 0.25em 1em;
  border-radius: 10em;
}

.nav__link:hover {
  opacity: 0.75;
}

.hero {
  padding: 100px 0;
  background-color: #23424a;
  color: #fff;
}

.hero__text {
  width: 62%;
}

.hero__img {
  width: 32%;
  align-self: flex-start;
}

.hero p {
  margin-bottom: 3em;
}

.main {
  margin-top: 3em;
}

.primary-content {
  width: 62%;
}

.sidebar {
  width: 32%;
  padding: 1em;
  text-align: center;
  color: #fff;
  background-color: #136c72;
}

/* CSS 중단점은 구체적인 디바이스보다 대체적인 디바이스의 기준과 현재 레이아웃 디자인의 기준에 맞추는 것이 좋다. */
/* 보통 media query의 경우 2~3개의 CSS 중단점이 적당하다. */
@media (max-width: 800px) {
  .row {
    display: block;
  }

  .hero__text,
  .hero__img,
  .primary-content,
  .sidebar {
    width: 100%;
  }

  .hero__img {
    margin-top: 2em;
  }
}
